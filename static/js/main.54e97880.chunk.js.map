{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","components/errorMessage/error.gif","components/errorMessage/ErrorMassage.js","components/spinner/Spinner.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","ErrorMassage","style","display","width","height","objectFit","margin","src","img","alt","Spinner","xmlns","background","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","onError","onToggleError","onCharLoading","updateChar","Math","floor","random","then","catch","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","imgStyle","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","length","itemsRef","setCharRef","elem","push","onFocus","forEach","item","classList","remove","add","focus","renderItems","arr","i","tabIndex","ref","props","onCharSelected","onKeyPress","e","key","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","ErrorBoundary","errorInfo","console","log","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54e97880.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","class MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=5e443cc9af1c42eca5370ed4c0f26aec';\r\n    _baseOffset = 210;\r\n\r\n\r\n    getResource = async (url) => {\r\n        let res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`)\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter)\r\n\r\n    }\r\n\r\n\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?&${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'К сожалению нет описания к данному персонажу',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelService;\r\n\r\n","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMassage = () => {\r\n    return <img style={{ display: 'block', width: '250px', height: \"250px\", objectFit: 'contain', margin: \"0 auto\" }} src={img} alt=\"error gif\" />\r\n}\r\n\r\nexport default ErrorMassage;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{ margin: '0 auto', background: 'none', display: 'block' }} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n                <g transform=\"rotate(0)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n                <g transform=\"rotate(45)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n                <g transform=\"rotate(90)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n                <g transform=\"rotate(135)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n                <g transform=\"rotate(180)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n                <g transform=\"rotate(225)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n                <g transform=\"rotate(270)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n                <g transform=\"rotate(315)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport ErrorMassage from '../errorMessage/ErrorMassage';\nimport Spinner from '../spinner/Spinner'\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component {\n\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n\n    marvelService = new MarvelService();\n    // Создаем новое свойство внутри класса\n\n    componentDidMount() {\n        this.updateChar()\n    }\n\n\n    onCharLoaded = (char) => {\n        this.setState({ char, loading: false })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n    onToggleError = () => {\n        this.setState({ error: false })\n    }\n\n    onCharLoading = () => {\n        this.setState({ loading: true })\n    }\n\n    updateChar = () => {\n        this.onCharLoading();\n        if (!this.state.error) {\n            const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n            this.marvelService\n                .getCharacter(id)\n                .then(this.onCharLoaded)\n                .catch(this.onError)\n            // аргумент автоматически подставиться в метод onCharLoaded\n        }\n        else {\n            this.onToggleError()\n        }\n\n\n    }\n\n    render() {\n        const { char, loading, error } = this.state;\n        const errorMessage = error ? <ErrorMassage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(errorMessage || spinner) ? <View char={char} /> : null;\n\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br />\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\"\n                        onClick={this.updateChar}\n                    >\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki } = char;\n\n    let imgStyle = { 'objectFit': 'cover' };\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = { 'objectFit': 'contain' }\n    }\n\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className='randomchar__img' style={imgStyle} />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import './charList.scss';\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMassage from '../errorMessage/ErrorMassage';\n\n\n\n\nclass CharList extends Component {\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 1540,\n        charEnded: false\n    }\n\n    marvelService = new MarvelService;\n\n    componentDidMount() {\n        this.onRequest();\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n\n    onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        this.setState(({ charList, offset }) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    itemsRef = [];\n\n    setCharRef = elem => {\n        this.itemsRef.push(elem)\n    }\n\n    onFocus = (id) => {\n        this.itemsRef.forEach(item => item.classList.remove(\"char__item_selected\"));\n        this.itemsRef[id].classList.add(\"char__item_selected\");\n        this.itemsRef[id].focus();\n    }\n\n\n    renderItems = (arr) => {\n        const items = arr.map((item, i) => {\n            let imgStyle = { 'objectFit': 'cover' }\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = { 'objectFit': 'unset' }\n            }\n\n\n            return (\n                <li\n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={this.setCharRef}\n                    key={item.id}\n                    onClick={() => {\n                        this.props.onCharSelected(item.id);\n                        this.onFocus(i)\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === \" \" || e.key === 'Enter') {\n                            this.props.onCharSelected(item.id);\n                            this.onFocus(i);\n                        }\n                    }}>\n\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n        const { charList, loading, error, offset, newItemLoading, charEnded } = this.state;\n        const items = this.renderItems(charList);\n        const spinner = loading ? <Spinner /> : null;\n        const errorMessage = error ? <ErrorMassage /> : null;\n        const content = !(error || loading) ? items : null;\n\n\n\n        return (\n            <div className=\"char__list\">\n                {content}\n                {errorMessage}\n                {spinner}\n                <button className=\"button button__main button__long\"\n                    style={{ 'display': charEnded ? 'none' : 'block' }}\n                    disabled={newItemLoading}\n                    onClick={() => this.onRequest(offset)}\n                >\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div >\n        )\n    }\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// renderItems = (arr) => {\n//     const items = arr.map((item) => {\n//         let imgStyle = { 'objectFit': 'cover' };\n//         if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n//             imgStyle = { 'objectFit': 'unset' };\n//         }\n\n//         return (\n//             <li\n//                 className=\"char__item\"\n//                 key={item.id}>\n//                 <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n//                 <div className=\"char__name\">{item.name}</div>\n//             </li>\n//         )\n//     });\n\n//     return (\n//         <ul className=\"char__grid\">\n//             {items}\n//         </ul>\n//     )\n// }\n\n\n// const { charList, loading, error } = this.state;\n// const items = this.renderItems(charList);\n// const errorMessage = error ? <ErrorMassage /> : null;\n// const spinner = loading ? <Spinner /> : null;\n// const content = !(errorMessage || spinner) ? items : null;\n\n// return (\n//     <div className=\"char__list\">\n//         {content}\n//         {errorMessage}\n//         {spinner}\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import './charInfo.scss';\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport MarvelService from '../../services/MarvelService';\nimport Skeleton from '../skeleton/Skeleton';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMassage from '../errorMessage/ErrorMassage';\n\nclass CharInfo extends Component {\n    state = {\n        char: null,\n        loading: false,\n        error: false,\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    };\n\n\n    onCharLoaded = (char) => {\n        this.setState({ char, loading: false })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    onToggleError = () => {\n        this.setState({ error: false })\n    }\n\n    onCharLoading = () => {\n        this.setState({ loading: true })\n    }\n\n    updateChar = () => {\n        const { charId } = this.props;\n        if (!charId) {\n            return\n        }\n\n        if (!this.state.error) {\n            this.onCharLoading();\n            this.marvelService\n                .getCharacter(charId)\n                .then(this.onCharLoaded)\n                .catch(this.onError)\n        }\n\n        else {\n            this.onToggleError();\n        }\n    }\n    render() {\n        const { char, loading, error } = this.state;\n        const skeleton = char || loading || error ? null : <Skeleton />\n        const errorMessage = error ? <ErrorMassage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(errorMessage || spinner || !char) ? <View char={char} /> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n\n\n}\n\nconst View = ({ char }) => {\n    const { name, thumbnail, description, homepage, wiki, comics } = char;\n    let imgStyle = { 'objectFit': 'cover' };\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = { 'objectFit': 'contain' }\n    }\n\n\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle} />\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length ? null : 'Нет комиксов'}\n                {comics.slice(0, 10).map((item, i) => {\n                    return (\n                        <li className='char__comics-item' key={i}>\n                            {item.name}\n                        </li>\n                    )\n                })\n                }\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\n\n\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMassage from \"../errorMessage/ErrorMassage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    // static getDerivedStateFromError(error) {\r\n    //     return {error:true}\r\n    // }\r\n    // аналог componentDidCatch, но данный метод изменяет только стейт\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo)\r\n\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMassage />\r\n        }\r\n        return this.props.children;\r\n    }\r\n\r\n}\r\n\r\nexport default ErrorBoundary;\r\n\r\n// componentDidCatch ловит ошибки в методе рендер, в методах жизненного цикла и в конструкторе.\r\n// они не ловят ошибки, которые произошли в обработчиках событий, в асинхронном коде, и внутри себя ","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n    state = {\n        selectedChar: null\n    }\n    onCharSelected = (id) => {\n        this.setState({ selectedChar: id })\n    }\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader />\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar />\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected} />\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar} />\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n                </main>\n            </div>\n        )\n    }\n}\n\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}